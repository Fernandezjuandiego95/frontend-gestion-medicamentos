{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/recepcion.service\";\nimport * as i3 from \"primeng/button\";\nimport * as i4 from \"primeng/inputtext\";\nimport * as i5 from \"primeng/dropdown\";\nexport let RecepcionFormComponent = /*#__PURE__*/(() => {\n  class RecepcionFormComponent {\n    constructor(fb, svc) {\n      this.fb = fb;\n      this.svc = svc;\n      this.recepcion = null;\n      this.productos = [];\n      this.proveedores = [];\n      this.saved = new EventEmitter();\n      this.saving = false;\n      this.form = this.fb.group({\n        id: [null],\n        numero_factura: ['', Validators.required],\n        cantidad: [1, Validators.required],\n        lote: ['', Validators.required],\n        registro_invima: ['', Validators.required],\n        fecha_hora: [''],\n        fecha_vencimiento: ['', Validators.required],\n        descripcion_estado_producto: ['', Validators.required],\n        id_producto: [null, Validators.required],\n        id_proveedor: [null, Validators.required]\n      });\n    }\n    ngOnChanges() {\n      if (this.recepcion) this.form.patchValue(this.recepcion);else this.form.reset({\n        cantidad: 1\n      });\n    }\n    submit() {\n      if (this.form.invalid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      const data = this.form.value;\n      if (data.id) this.svc.actualizar(data).subscribe(() => this.saved.emit());else this.svc.registrar(data).subscribe(() => this.saved.emit());\n    }\n  }\n  RecepcionFormComponent.ɵfac = function RecepcionFormComponent_Factory(t) {\n    return new (t || RecepcionFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RecepcionService));\n  };\n  RecepcionFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecepcionFormComponent,\n    selectors: [[\"app-recepcion-form\"]],\n    inputs: {\n      recepcion: \"recepcion\",\n      productos: \"productos\",\n      proveedores: \"proveedores\"\n    },\n    outputs: {\n      saved: \"saved\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 27,\n    vars: 3,\n    consts: [[1, \"p-fluid\", 3, \"formGroup\", \"ngSubmit\"], [\"pInputText\", \"\", \"formControlName\", \"numero_factura\"], [\"type\", \"number\", \"pInputText\", \"\", \"formControlName\", \"cantidad\"], [\"pInputText\", \"\", \"formControlName\", \"lote\"], [\"pInputText\", \"\", \"formControlName\", \"registro_invima\"], [\"type\", \"date\", \"pInputText\", \"\", \"formControlName\", \"fecha_vencimiento\"], [\"pInputText\", \"\", \"formControlName\", \"descripcion_estado_producto\"], [\"optionLabel\", \"nombre\", \"optionValue\", \"id\", \"formControlName\", \"id_producto\", \"placeholder\", \"--Seleccione el producto--\", 3, \"options\"], [\"optionLabel\", \"nombre_contacto\", \"optionValue\", \"id\", \"formControlName\", \"id_proveedor\", \"placeholder\", \"--Seleccione el proveedor--\", 3, \"options\"], [2, \"text-align\", \"right\", \"margin-top\", \"8px\"], [\"pButton\", \"\", \"label\", \"Guardar\", \"type\", \"submit\"]],\n    template: function RecepcionFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RecepcionFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(1, \"label\");\n        i0.ɵɵtext(2, \"Numero factura\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 1);\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5, \"Cantidad\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2);\n        i0.ɵɵelementStart(7, \"label\");\n        i0.ɵɵtext(8, \"Lote\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11, \"Registro INVIMA\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 4);\n        i0.ɵɵelementStart(13, \"label\");\n        i0.ɵɵtext(14, \"Fecha de Vencimiento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 5);\n        i0.ɵɵelementStart(16, \"label\");\n        i0.ɵɵtext(17, \"Descripci\\u00F3n del estado del producto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 6);\n        i0.ɵɵelementStart(19, \"label\");\n        i0.ɵɵtext(20, \"Producto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"p-dropdown\", 7);\n        i0.ɵɵelementStart(22, \"label\");\n        i0.ɵɵtext(23, \"Proveedor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"p-dropdown\", 8);\n        i0.ɵɵelementStart(25, \"div\", 9);\n        i0.ɵɵelement(26, \"button\", 10);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"options\", ctx.productos);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"options\", ctx.proveedores);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.ButtonDirective, i4.InputText, i5.Dropdown],\n    encapsulation: 2\n  });\n  return RecepcionFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
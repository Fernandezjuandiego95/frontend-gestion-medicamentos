{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/proveedor.service\";\nimport * as i3 from \"primeng/button\";\nimport * as i4 from \"primeng/inputtext\";\nexport let ProveedorFormComponent = /*#__PURE__*/(() => {\n  class ProveedorFormComponent {\n    constructor(fb, svc) {\n      this.fb = fb;\n      this.svc = svc;\n      this.proveedor = null;\n      this.saved = new EventEmitter();\n      this.saving = false;\n      this.form = this.fb.group({\n        id: [null],\n        tipo_identificacion: ['', Validators.required],\n        numero_identificacion: ['', Validators.required],\n        razon_social: ['', Validators.required],\n        direccion: [''],\n        nombre_contacto: [''],\n        celular: [''],\n        actividad_economica: ['']\n      });\n    }\n    ngOnChanges() {\n      if (this.proveedor) this.form.patchValue(this.proveedor);else this.form.reset({\n        tipo_identificacion: 'CC'\n      });\n    }\n    submit() {\n      if (this.form.invalid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      const data = this.form.value;\n      if (data.id) this.svc.actualizar(data).subscribe(() => this.saved.emit());else this.svc.registrar(data).subscribe(() => this.saved.emit());\n    }\n  }\n  ProveedorFormComponent.ɵfac = function ProveedorFormComponent_Factory(t) {\n    return new (t || ProveedorFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProveedorService));\n  };\n  ProveedorFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProveedorFormComponent,\n    selectors: [[\"app-proveedor-form\"]],\n    inputs: {\n      proveedor: \"proveedor\"\n    },\n    outputs: {\n      saved: \"saved\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 12,\n    vars: 1,\n    consts: [[1, \"p-fluid\", 3, \"formGroup\", \"ngSubmit\"], [\"pInputText\", \"\", \"formControlName\", \"tipo_identificacion\"], [\"pInputText\", \"\", \"formControlName\", \"numero_identificacion\"], [\"pInputText\", \"\", \"formControlName\", \"razon_social\"], [2, \"text-align\", \"right\", \"margin-top\", \"8px\"], [\"pButton\", \"\", \"label\", \"Guardar\", \"type\", \"submit\"]],\n    template: function ProveedorFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ProveedorFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(1, \"label\");\n        i0.ɵɵtext(2, \"Tipo ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"input\", 1);\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5, \"N\\u00FAmero\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2);\n        i0.ɵɵelementStart(7, \"label\");\n        i0.ɵɵtext(8, \"Raz\\u00F3n social\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵelement(11, \"button\", 5);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.ButtonDirective, i4.InputText],\n    encapsulation: 2\n  });\n  return ProveedorFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}